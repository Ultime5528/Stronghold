// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/Autonomous.h"
#include "Commands/Avancer.h"
#include "Commands/BDescendAvant.h"
#include "Commands/BMonteAvant.h"
#include "Commands/BSpinAvant.h"
#include "Commands/CLoad.h"
#include "Commands/CShoot.h"
#include "Commands/CUnload.h"
#include "Commands/PMonte.h"
#include "Commands/PMonteDroite.h"
#include "Commands/PMonteGauche.h"
#include "Commands/PRetract.h"
#include "Commands/Pilotage.h"
#include "Commands/Tourner.h"
#include "Commands/Unload.h"
#include "Commands/AutomaticCapture.h"
#include "Commands/Shoot.h"
#include "Commands/Load.h"
#include "Commands/BSetBas.h"
#include "Commands/BSetLoad.h"
#include "Subsystems/BouffeurAvant.h"
#include "Commands/BSetBas.h"
#include "Commands/BSetHaut.h"
#include "Commands/CSetShoot.h"
#include "Commands/CSetBas.h"
#include "Commands/CSetLoad.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    stick.reset(new Joystick(0));
    

    // SmartDashboard Buttons
    SmartDashboard::PutData("Unload", new Unload());
    SmartDashboard::PutData("BSpinAvant", new BSpinAvant());
    SmartDashboard::PutData("Tourner 45", new Tourner(45));
    SmartDashboard::PutData("Tourner 90", new Tourner(90));
    SmartDashboard::PutData("Tourner 180", new Tourner(180));
    SmartDashboard::PutData("Avancer", new Avancer());
    SmartDashboard::PutData("Pilotage", new Pilotage());
    SmartDashboard::PutData("PRetract", new PRetract());
    SmartDashboard::PutData("PMonte", new PMonte());
    SmartDashboard::PutData("BDescendAvant", new BDescendAvant());
    SmartDashboard::PutData("B bas", new BSetBas());
    SmartDashboard::PutData("C bas", new CSetShoot());
    SmartDashboard::PutData("C load", new CSetBas());
    SmartDashboard::PutData("CShoot", new CShoot());
    SmartDashboard::PutData("CUnload", new CUnload());
    SmartDashboard::PutData("CLoad", new CLoad());
    SmartDashboard::PutData("PMonteDroite", new PMonteDroite());
    SmartDashboard::PutData("PMonteGauche", new PMonteGauche());
    SmartDashboard::PutData(Scheduler::GetInstance());

    SmartDashboard::PutData("BHaut", new BSetHaut());
    SmartDashboard::PutData("BSetBas", new BSetBas());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    //SmartDashboard::PutData("Scheduler", Scheduler::GetInstance());


    button1.reset(new JoystickButton(stick.get(), 1));
    button2.reset(new JoystickButton(stick.get(), 2));
    button3.reset(new JoystickButton(stick.get(), 3));
    button4.reset(new JoystickButton(stick.get(), 4));
    button5.reset(new JoystickButton(stick.get(), 5));
    button6.reset(new JoystickButton(stick.get(), 6));



    button1->WhenPressed(new CSetShoot());
    button2->WhenPressed(new BSetLoad());
    button3->WhenPressed(new CSetLoad());
    button4->WhenPressed(new Unload());
    button5->WhenPressed(new PMonte());
    button6->WhenPressed(new PRetract());


}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getStick() {
   return stick;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
