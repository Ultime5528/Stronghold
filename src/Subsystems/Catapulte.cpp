// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Catapulte.h"
#include "../RobotMap.h"


double Catapulte::potLoad(0.43);
double Catapulte::potMax(0.4);
double Catapulte::potMin(0.26);
double Catapulte::potShoot(0.275);

Catapulte::Catapulte() : Subsystem("Catapulte") {

    monte = RobotMap::catapulteMonte;
    pot = RobotMap::catapultepot;

    m_reaching = false;
    m_isGoingUp = false;
    m_setpoint = 0;

}

void Catapulte::InitDefaultCommand() {

}

void Catapulte::SetAtShoot() {
   	m_setpoint = potShoot;
}

void Catapulte::SetAtMin() {
	m_setpoint = potMax;
}

void Catapulte::SetAtLoad() {
	m_setpoint = potLoad;
}

void Catapulte::Reach() {

	if(!HasReached()) {

		m_reaching = true;

		if (pot->Get() < m_setpoint){
			Down();
			m_isGoingUp = false;
		}
		else  {
			Up();
			m_isGoingUp = true;
		}
	}
	else {
		Maintien();
	}
}


void Catapulte::Up() {

	if (pot->Get() >= potMin) {
		monte->Set(0.5);
	}
	else  {
		StopMonte();
	}
}

void Catapulte::Down() {
	if (pot->Get() <= potMax) {
		monte->Set(-0.15);
	}
	else  {
		StopMonte();
	}
}

void Catapulte::StopMonte() {
	monte->Set(0);
	m_reaching = false;
}

void Catapulte::Maintien() {
	if(pot->Get() > potMin)
		monte->Set(0.08);
}

void Catapulte::MaintienLoad() {
	monte->Set(0.2);
}

bool Catapulte::HasReached() {

	if(m_setpoint == potMax && pot->Get() > potMax) {
		return true;
	}

	if (m_reaching) {

		bool doneReaching;
		doneReaching = (m_isGoingUp == (pot->Get() <= m_setpoint));

		if (doneReaching)
			m_reaching = false;

		return doneReaching;
	}

	else {
		return (pot->Get() < m_setpoint + 0.004) && (pot->Get() > m_setpoint - 0.004);
	}

}

double Catapulte::GetPot() {
	return pot->Get();
}
